#include <Wire.h>
#include <Adafruit_MCP4725.h>

//dac object
Adafruit_MCP4725 dac;

//counting variable i for various loops
int i;

//period in micro seconds --> 550uS ~ 1800Hz
const unsigned long periodSamplingMicros = 550;

//Look up table to create N(0,1) gaussian samples using uniformly random index
const float gaussLUT[512] = {
  -0.330000000000000,-0.317267399267399,-0.292446886446886,-0.277135531135531,-0.265692307692308,-0.256666666666667,-0.249091575091575,-0.242483516483517,-0.236681318681319,
  -0.231523809523810,-0.226849816849817,-0.222498168498168,-0.218468864468864,-0.214600732600733,-0.211216117216117,-0.207831501831502,-0.204769230769231,-0.201706959706960,
  -0.198805860805861,-0.196227106227106,-0.193648351648352,-0.191069597069597,-0.188652014652015,-0.186395604395604,-0.184139194139194,-0.182043956043956,-0.179948717948718,
  -0.177853479853480,-0.175919413919414,-0.173985347985348,-0.172051282051282,-0.170278388278388,-0.168505494505494,-0.166732600732601,-0.165120879120879,-0.163509157509157,
  -0.161897435897436,-0.160285714285714,-0.158673992673993,-0.157223443223443,-0.155772893772894,-0.154322344322344,-0.152871794871795,-0.151421245421245,-0.149970695970696,
  -0.148681318681319,-0.147391941391941,-0.146102564102564,-0.144813186813187,-0.143523809523810,-0.142234432234432,-0.140945054945055,-0.139816849816850,-0.138527472527473,
  -0.137399267399267,-0.136109890109890,-0.134981684981685,-0.133853479853480,-0.132725274725275,-0.131597069597070,-0.130630036630037,-0.129501831501831,-0.128373626373626,
  -0.127406593406593,-0.126278388278388,-0.125311355311355,-0.124183150183150,-0.123216117216117,-0.122249084249084,-0.121120879120879,-0.120153846153846,-0.119186813186813,
  -0.118219780219780,-0.117252747252747,-0.116285714285714,-0.115479853479853,-0.114512820512820,-0.113545787545788,-0.112578754578755,-0.111772893772894,-0.110805860805861,
  -0.110000000000000,-0.109032967032967,-0.108227106227106,-0.107260073260073,-0.106454212454212,-0.105487179487179,-0.104681318681319,-0.103875457875458,-0.103069597069597,
  -0.102263736263736,-0.101296703296703,-0.100490842490842,-0.0996849816849817,-0.0988791208791209,-0.0980732600732601,-0.0972673992673993,-0.0964615384615385,-0.0956556776556776,
  -0.0948498168498168,-0.0942051282051282,-0.0933992673992674,-0.0925934065934066,-0.0917875457875458,-0.0911428571428571,-0.0903369963369963,-0.0895311355311355,-0.0887252747252747,
  -0.0880805860805860,-0.0872747252747252,-0.0866300366300366,-0.0858241758241758,-0.0851794871794872,-0.0843736263736264,-0.0837289377289377,-0.0829230769230769,-0.0822783882783883,
  -0.0814725274725275,-0.0808278388278388,-0.0800219780219780,-0.0793772893772894,-0.0787326007326007,-0.0779267399267399,-0.0772820512820513,-0.0766373626373626,-0.0759926739926740,
  -0.0751868131868132,-0.0745421245421245,-0.0738974358974359,-0.0732527472527473,-0.0726080586080586,-0.0718021978021978,-0.0711575091575091,-0.0705128205128205,-0.0698681318681318,
  -0.0692234432234432,-0.0685787545787546,-0.0679340659340659,-0.0672893772893773,-0.0666446886446886,-0.0660000000000000,-0.0653553113553113,-0.0647106227106227,-0.0640659340659341,
  -0.0634212454212454,-0.0627765567765568,-0.0621318681318681,-0.0614871794871795,-0.0608424908424908,-0.0601978021978022,-0.0595531135531135,-0.0589084249084249,-0.0582637362637362,
  -0.0577802197802197,-0.0571355311355311,-0.0564908424908425,-0.0558461538461538,-0.0552014652014652,-0.0547179487179487,-0.0540732600732601,-0.0534285714285714,-0.0527838827838828,
  -0.0521391941391941,-0.0516556776556776,-0.0510109890109890,-0.0503663003663004,-0.0498827838827839,-0.0492380952380952,-0.0485934065934066,-0.0479487179487179,-0.0474652014652015,
  -0.0468205128205128,-0.0461758241758242,-0.0456923076923077,-0.0450476190476190,-0.0444029304029304,-0.0439194139194139,-0.0432747252747252,-0.0427912087912088,-0.0421465201465201,
  -0.0415018315018315,-0.0410183150183150,-0.0403736263736263,-0.0398901098901099,-0.0392454212454212,-0.0386007326007326,-0.0381172161172161,-0.0374725274725275,-0.0369890109890110,
  -0.0363443223443223,-0.0358608058608058,-0.0352161172161172,-0.0347326007326007,-0.0340879120879121,-0.0336043956043956,-0.0329597069597070,-0.0324761904761905,-0.0318315018315018,
  -0.0313479853479854,-0.0307032967032967,-0.0302197802197802,-0.0295750915750916,-0.0290915750915751,-0.0284468864468864,-0.0279633699633699,-0.0273186813186813,-0.0268351648351648,
  -0.0261904761904762,-0.0257069597069597,-0.0252234432234432,-0.0245787545787546,-0.0240952380952381,-0.0234505494505494,-0.0229670329670329,-0.0223223443223443,-0.0218388278388278,
  -0.0213553113553113,-0.0207106227106227,-0.0202271062271062,-0.0195824175824176,-0.0190989010989011,-0.0186153846153846,-0.0179706959706960,-0.0174871794871795,-0.0168424908424908,
  -0.0163589743589744,-0.0158754578754579,-0.0152307692307692,-0.0147472527472527,-0.0141025641025641,-0.0136190476190476,-0.0131355311355311,-0.0124908424908425,-0.0120073260073260,
  -0.0115238095238095,-0.0108791208791208,-0.0103956043956044,-0.00991208791208789,-0.00926739926739923,-0.00878388278388278,-0.00813919413919413,-0.00765567765567763,-0.00717216117216117,
  -0.00652747252747252,-0.00604395604395602,-0.00556043956043952,-0.00491575091575092,-0.00443223443223442,-0.00394871794871792,-0.00330402930402927,-0.00282051282051281,-0.00233699633699631,
  -0.00169230769230766,-0.00120879120879120,-0.000725274725274705,-8.05860805860537e-05,0.000402930402930402,0.00104761904761905,0.00153113553113555,0.00201465201465205,0.00265934065934066,
  0.00314285714285716,0.00362637362637366,0.00427106227106231,0.00475457875457877,0.00523809523809526,0.00588278388278392,0.00636630036630037,0.00684981684981687,0.00749450549450552,
  0.00797802197802198,0.00846153846153848,0.00910622710622713,0.00958974358974363,0.0102344322344322,0.0107179487179487,0.0112014652014652,0.0118461538461539,0.0123296703296703,
  0.0128131868131868,0.0134578754578755,0.0139413919413919,0.0144249084249084,0.0150695970695971,0.0155531135531136,0.0161978021978022,0.0166813186813187,0.0171648351648352,
  0.0178095238095238,0.0182930402930403,0.0189377289377290,0.0194212454212455,0.0199047619047619,0.0205494505494506,0.0210329670329671,0.0216776556776557,0.0221611721611722,
  0.0226446886446887,0.0232893772893773,0.0237728937728938,0.0244175824175824,0.0249010989010989,0.0255457875457876,0.0260293040293040,0.0265128205128205,0.0271575091575092,
  0.0276410256410256,0.0282857142857143,0.0287692307692308,0.0294139194139194,0.0298974358974359,0.0305421245421246,0.0310256410256410,0.0316703296703297,0.0321538461538462,
  0.0327985347985348,0.0332820512820513,0.0339267399267400,0.0344102564102564,0.0350549450549451,0.0355384615384616,0.0361831501831502,0.0366666666666667,0.0373113553113553,
  0.0377948717948718,0.0384395604395605,0.0389230769230769,0.0395677655677656,0.0402124542124542,0.0406959706959707,0.0413406593406593,0.0418241758241758,0.0424688644688645,
  0.0431135531135531,0.0435970695970696,0.0442417582417582,0.0447252747252747,0.0453699633699634,0.0460146520146521,0.0464981684981685,0.0471428571428572,0.0477875457875458,
  0.0482710622710623,0.0489157509157510,0.0495604395604396,0.0502051282051282,0.0506886446886447,0.0513333333333334,0.0519780219780220,0.0524615384615385,0.0531062271062271,
  0.0537509157509158,0.0543956043956044,0.0550402930402931,0.0555238095238095,0.0561684981684982,0.0568131868131868,0.0574578754578755,0.0581025641025641,0.0585860805860806,
  0.0592307692307692,0.0598754578754579,0.0605201465201466,0.0611648351648352,0.0618095238095239,0.0624542124542125,0.0630989010989011,0.0637435897435898,0.0643882783882784,
  0.0650329670329671,0.0656776556776557,0.0663223443223443,0.0669670329670330,0.0676117216117216,0.0682564102564103,0.0689010989010989,0.0695457875457876,0.0701904761904762,
  0.0708351648351648,0.0714798534798535,0.0721245421245421,0.0729304029304029,0.0735750915750916,0.0742197802197802,0.0748644688644689,0.0755091575091575,0.0763150183150183,
  0.0769597069597070,0.0776043956043957,0.0782490842490843,0.0790549450549451,0.0796996336996338,0.0803443223443224,0.0811501831501832,0.0817948717948718,0.0826007326007326,
  0.0832454212454213,0.0840512820512821,0.0846959706959707,0.0855018315018315,0.0861465201465202,0.0869523809523810,0.0875970695970696,0.0884029304029304,0.0890476190476191,
  0.0898534798534799,0.0906593406593407,0.0914652014652015,0.0921098901098901,0.0929157509157509,0.0937216117216117,0.0945274725274725,0.0951721611721612,0.0959780219780220,
  0.0967838827838828,0.0975897435897436,0.0983956043956044,0.0992014652014652,0.100007326007326,0.100813186813187,0.101619047619048,0.102586080586081,0.103391941391941,
  0.104197802197802,0.105003663003663,0.105809523809524,0.106776556776557,0.107582417582418,0.108549450549451,0.109355311355311,0.110322344322344,0.111128205128205,
  0.112095238095238,0.112901098901099,0.113868131868132,0.114835164835165,0.115802197802198,0.116608058608059,0.117575091575092,0.118542124542125,0.119509157509158,
  0.120476190476190,0.121443223443223,0.122571428571429,0.123538461538462,0.124505494505495,0.125633699633700,0.126600732600733,0.127728937728938,0.128695970695971,
  0.129824175824176,0.130952380952381,0.131919413919414,0.133047619047619,0.134175824175824,0.135304029304029,0.136432234432234,0.137721611721612,0.138849816849817,
  0.140139194139194,0.141267399267399,0.142556776556777,0.143846153846154,0.145135531135531,0.146424908424908,0.147714285714286,0.149003663003663,0.150293040293040,
  0.151743589743590,0.153194139194139,0.154644688644689,0.156095238095238,0.157545787545788,0.158996336996337,0.160608058608059,0.162219780219780,0.163831501831502,
  0.165443223443223,0.167054945054945,0.168827838827839,0.170600732600733,0.172373626373626,0.174307692307692,0.176241758241758,0.178175824175824,0.180271062271062,
  0.182366300366300,0.184461538461539,0.186717948717949,0.188974358974359,0.191391941391941,0.193970695970696,0.196549450549451,0.199128205128205,0.202029304029304,
  0.205091575091575,0.208153846153846,0.211538461538462,0.214923076923077,0.218791208791209,0.222820512820513,0.227172161172161,0.231846153846154,0.237003663003663,
  0.242805860805861,0.249413919413919,0.256989010989011,0.266014652014652,0.277457875457876,0.292769230769231,0.317589743589744,0.330000000000000
};

//variable for each created sample - one for a float and one for the int that will actually set the DAC
float sample = 0;
uint16_t sampleQuant = 2048;

//constant for conversion from float to int for DAC
float dacConvert = 4095 / 3.3;

//microsecond timers ensure output data rate is even
unsigned long previousMicros = micros();
unsigned long currentMicros;


void setup() {

  //start serial and wait for a moment
  Serial.begin(9600);
  delay(100);

  //seed random number generator with open analog pin
  randomSeed(analogRead(0));

  //check DAC initialization
  if (dac.begin(0x62))  //could be 0x60 or 0x62
  {
    Serial.println("MCP4725 Initialized Successfully.");
    Wire.setClock(400000L);
  } else {
    Serial.println("Failed to Initialize MCP4725.");
  }
  
}


void loop() {

  //check time to see if we should update output
  currentMicros = micros();
  if (((currentMicros-previousMicros) >= periodSamplingMicros)) {

    //update time keeping variable
    previousMicros = currentMicros;

    //set new output
    dac.setVoltage(sampleQuant, false);
    
    //calculate new sample using AR(1) y(n) = w(n) + 0.9y(n-1)
    sample = gaussLUT[random(512)] + (0.9 * sample);
    sampleQuant = uint16_t((sample + 1.65) * dacConvert);

  }
  
}
